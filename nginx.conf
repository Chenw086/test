# 运行 nginx 服务器的 woker 进程的用户和用户组
user nginx;

# 生成工作进程数量,auto 与系统保持一致
worker_processes auto;

# 错误日志存放位置
error_log /var/log/nginx/error.log;

# 守护进程方式启动
daemon on;

# 当前 master 进程的 pid 文件
pid /run/nginx.pid;

# 动态加载模块 load_module
# include /usr/share/nginx/modules/*.conf;

events {
    accept_mutex on;
    multi_accept on;
    worker_connections 1024;
    use epoll;
}

http {
    # 识别前端资源类型的 mimetype
    include /etc/nginx/mime.types;

    # 默认的 mime 类型
    default_type application/octet-stream;

    # 定义日志类型
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # 定义日志
    access_log /var/log/nginx/access.log main;

    # 优化文件传输
    sendfile on;

    # 发送响应头之前将多个小数据包合并为一个大的数据包，以减少网络开销
    tcp_nopush on;

    # 强制套接字发送数据,有内容就发
    tcp_nodelay on;

    # 设置类型哈希表的最大大小
    types_hash_max_size 2048;

    # 保持连接时间,超时时间
    keepalive_timeout 65;

    # 单个长链接最多可以处理的 http 请求个数
    keepalive_requests 100;

    # 压缩配置
    gzip on; #开启gzip功能
    gzip_types *; #压缩源文件类型,根据具体的访问资源类型设定
    gzip_comp_level 6; #gzip压缩级别
    gzip_min_length 1024; #进行压缩响应页面的最小长度,content-length
    gzip_buffers 4 16K; #缓存空间大小
    gzip_http_version 1.1; #指定压缩响应所需要的最低HTTP请求版本
    gzip_vary on; #往头信息中添加压缩标识
    gzip_disable "MSIE [1-6]\."; #对IE6以下的版本都不进行压缩
    gzip_proxied off; #nginx作为反向代理压缩服务端返回数据的条件

    # 文件描述符缓存
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # 缓冲区配置
    proxy_buffering on;
    proxy_buffers 4 32k;
    proxy_buffer_size 32k;
    proxy_busy_buffers_size 32k;
    proxy_temp_file_write_size 32k;
    proxy_max_temp_file_size 1024m;

    # 缓存区配置
    proxy_cache_path /usr/local/proxy_cache levels=2:1 keys_zone=itcast:200m inactive=1d max_size=20g;
    proxy_cache_key $scheme$proxy_host$request_uri;
    proxy_cache_min_uses 5;
    proxy_cache_valid 200 5d;
    proxy_cache_valid 404 30s;
    proxy_cache_valid any 1m;
    proxy_no_cache $cookie_nocache $arg_nocache $arg_comment;
    proxy_cache_bypass $cookie_nocache $arg_nocache $arg_comment;


    root /usr/share/nginx/html;
    index index.html;

    # 加载子配置项
    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location =/test.html {
            rewrite ^/(.*)$ /a.html break;
        }

        location =/a.html {
            default_type text/plain;
            return 200 '221122';
        }

        error_page 404 =200 /404.html;

        error_page 500 502 503 504 /50x.html;

    }

}